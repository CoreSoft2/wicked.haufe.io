extends layout

block vars
  - var thisPage = 'features'

mixin feature(featureObject, index)
  - var thisClass = (index % 2) == 0 ? "grey" : "white"
  div(class="col-md-4 feature-block #{thisClass}")
    if !featureObject.gummybear
      h5.feature= featureObject.title
      p.feature!= featureObject.text
    else
      br
      img(src="images/wicked-#{featureObject.color}-100.png").center-block


block content

  -
    var featureList = [
      { title: "Authenticate with email and password", 
        text: "Let your users sign up with their email address and a password. Email addresses will be automatically validated by sending out verification emails." },
      { title: "Authenticate with ADFS",
        text: "Integrate the login process with your own ADFS 3.0 server. Register the API portal with ADFS and use your local users." },
      { title: "Authentication with GitHub or Google",
        text: "You may also configure signup and login using OAuth2 with GitHub and/or Google. These identities will be treated as 'verified' automatically." },
      { title: "Group based rights to APIs",
        text: "Define custom user groups and assign those groups to users in order to limit access to specific APIs to specific groups. The Admin group can also be assigned." },
      { title: "Group based rights to custom content",
        text: "The content section also supports group based access, e.g. to How-tos or tutorials." },
      { gummybear: true, color: "blue" },
      { title: "Automatic group assignment",
        text: "Users with a verified email address can be automatically assigned a user group, and ADFS groups may be mapped automatically to wicked user groups." },
      { title: "Subscription Plans",
        text: "API definitions can be associated with subscription plans, which can carry additional settings, e.g. different rate limits for different users." },
      { title: "Application Concept",
        text: "In order to subscribe to an API, a user needs to create an application (which is the client of the API); APIs are coupled with applications, not users." },
      { title: "Application Owner Roles",
        text: "Applications can be shared among users, using different roles on the application: Admin/Owner, Collaborator and Reader." },
      { gummybear: true, color: "red" },
      { title: "Hand over Applications",
        text: "By assigning Owner rights to an application to a different user, applications can be handed over to different developers/users without recreating them." },
      { title: "Easy API Gateway configuration",
        text: "wicked makes it easier to configure the API Gateway correctly. The Kickstarter helps configuring e.g. Rate Limiting or CORS." },
      { title: "API Key or OAuth 2",
        text: "Out of the box, wicked enables fast securing of your API using API Key authentication or OAuth 2 Client Credentials Flow." },
      { title: "Swagger UI integration",
        text: "In order to view the APIs in more detail, wicked has integrated Swagger UI, with configurable direct access to the backend services." },
      { gummybear: true, color: "green" },
      { title: "Subscription Approval Workflow",
        text: "API Plans can be configured to require approval of subscription; you will be sent an email to a predefined email address to the approval request." },
      { title: "Chatbot Integration",
        text: "wicked can post interesting events (you decide which are interesting) to either a Rocket.Chat or a Slack Chat instance. Just register a Hook URL with Slack, and configure it for wicked." },
      { title: "Docker Deployment",
        text: "The entire APIm solution is deployed using docker; everything runs in docker, enabling deployments to whatever infrastructure supports it." },
      { title: "Simple scaling of deployment",
        text: "By using docker-compose, the deployment of your API Management solution can be easily scaled to use multiple instances of Kong, behind a powerful HAproxy. All pre-configured for you to use." },
      { title: "Battle-proven API Gateway",
        text: "Behind the scenes, wicked uses battle-proven, enterprise grade API Gateway <a href='http://getkong.org' target='_blank'>KONG by Mashape</a>. Open Source does not get much better than that." },
    ]
    
  //       { title: "Feature Template",
  //         text: "Copy this" },

    
  .jumbotron.feature-heading
    .container(style='padding-top:70px').feature-container
      h1 Features
    
      p These are some of the things wicked.haufe.io could do for you.
    
  .container
      .row
        .col-md-12
          img(src="images/wicked-feature-header.jpg").center-block

      br
        
      each feat, i in featureList
        if (i % 3 == 0)
          .row
            +feature(feat, i)
            if ((i+1) < featureList.length)
              +feature(featureList[i+1], i+1)
            if ((i+2) < featureList.length)
              +feature(featureList[i+2], i+2)

      br
      br
      .row
        .col-md-12
          table(width='100%')
            tr
              td(style='text-align:center')
                | For full documentation, head over to the <a href='https://github.com/Haufe-Lexware/wicked.haufe.io' target='_blank'>GitHub repository of wicked.haufe.io</a>.